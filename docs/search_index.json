[["serie-de-tiempo.html", "Capítulo 1 SERIE DE TIEMPO 1.1 Referencia 1.2 Herramientas utilizadas", " Capítulo 1 SERIE DE TIEMPO La propuesta se enfocará en el análisis de la serie de tiempo de la variacion anual del Índice de Precios al Consumidor (IPC) en Colombia, suministrada por el DANE, la cual contiene datos desde el 1 de julio de 1955 hasta el 1 de octubre de 2024 con una frecuencia mensual. El IPC es un indicador clave para medir la variación de los precios de una canasta de bienes y servicios en el tiempo, y es fundamental para el análisis económico, la toma de decisiones políticas y la planificación financiera empresarial o personal. 1.1 Referencia DANE - https://sitios.dane.gov.co/ipc/visorIPC/#!/ 1.2 Herramientas utilizadas Para la publicación del libro Bookdown, se utiliza R-Studio como software editor e intermediario entre el repositorio creado en GitHub que a su vez permite la publicación del libro mediante un enlace web. "],["carga-y-descripción-de-los-datos.html", "Capítulo 2 CARGA Y DESCRIPCIÓN DE LOS DATOS 2.1 Carga de los datos 2.2 Descripción de la base de datos 2.3 Pre-procesamiento de datos", " Capítulo 2 CARGA Y DESCRIPCIÓN DE LOS DATOS 2.1 Carga de los datos Inicialmente se carga la base de datos que contiene la variable a estudiar.A continuación se muestra una breve visualización de la data. data &lt;- read.csv(file = &quot;Datos.csv&quot;, header = TRUE, sep = &quot;,&quot;, fill = TRUE) library(dplyr) library(ggplot2) library(forecast) library(zoo) library(grid) library(plotly) glimpse(data) ## Rows: 999 ## Columns: 7 ## $ Mes &lt;chr&gt; &quot;7/1/1955&quot;, &quot;8/1/1955&quot;, &quot;9/1/1955&quot;, &quot;10/1/1955&quot;, &quot;11/1/1955&quot;, &quot;12/1/1955&quot;, &quot;1/1/1956&quot;, &quot;2/1/1956&quot;, &quot;3/1/19… ## $ IPC &lt;chr&gt; &quot;-0.87%&quot;, &quot;-0.01%&quot;, &quot;0.84%&quot;, &quot;0.77%&quot;, &quot;1.44%&quot;, &quot;2.03%&quot;, &quot;2.10%&quot;, &quot;2.57%&quot;, &quot;3.10%&quot;, &quot;3.04%&quot;, &quot;4.25%&quot;, &quot;5.28… ## $ DTF &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ usura.E.A. &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ usura.M.V. &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ usura.DTF &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… ## $ usura.IPC &lt;chr&gt; &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;… 2.2 Descripción de la base de datos Como se puede observar en la anterior tabla, el dataset se compone de 7 variables y 832 registros.Todas las variables identificadas como tipo caracter. A continuación se define una tabla la cual indica el tipo de adecuado de cada una de las variables: Resumen_variables&lt;-data.frame( Variable= c(&quot;Mes&quot;,&quot;IPC&quot;,&quot;DTF&quot;,&quot;usura E.A.&quot;,&quot;usura M.V.&quot;,&quot;usura DTF&quot;,&quot;usura IPC&quot;), Tipo_variable= c(&quot;Fecha&quot;,&quot;Numerica&quot;,&quot;Numerica&quot;,&quot;Numerica&quot;,&quot;Numerica&quot;,&quot;Numerica&quot;,&quot;Numerica&quot;) ) print(Resumen_variables) ## Variable Tipo_variable ## 1 Mes Fecha ## 2 IPC Numerica ## 3 DTF Numerica ## 4 usura E.A. Numerica ## 5 usura M.V. Numerica ## 6 usura DTF Numerica ## 7 usura IPC Numerica 2.3 Pre-procesamiento de datos Después del cargue y análisis descriptivo de la información, se identificó que los tipos de datos estaban incorrectos, pues eran de tipo caracter y se esperaba que fueran tipo fecha y numérico. Adicionalmente, se observan otras variables que no se van a utilizar durante el desarrollo de este proyecto, por consiguiente se procede a eliminarlas a traves del siguiente codigo: data &lt;- data[ , -c(3:7)] También se observo que las variables tenian un nombre inadecuado, por lo tanto, se procede a renombrar las variables. colnames(data)&lt;-c(&quot;Tiempo&quot;,&quot;IPC&quot;) Posteriormente, se hace preprocesamiento de las variables, para poder convertir la data en serie de tiempo. Los cambios que se le aplicaron a los datos fueron: -Se convierte la variable Tiempo a formato Fecha. -Se elimina el caracter % de la variable IPC. -Se cambia la “,” por “.” como separador de decimales. -Se convierte la variable IPC a tipo numérica. -Se eliminan datos faltantes en ambas variables. # Convertir la columna &quot;Tiempo&quot; a formato de fecha data$Tiempo &lt;- as.Date(data$Tiempo, format = &quot;%d/%m/%Y&quot;) # Remover el símbolo de porcentaje y reemplazar comas por puntos data$IPC &lt;- gsub(&quot;%&quot;, &quot;&quot;, data$IPC) # Eliminar &#39;%&#39; data$IPC &lt;- gsub(&quot;,&quot;, &quot;.&quot;, data$IPC) # Reemplazar &#39;,&#39; por &#39;.&#39; # Convertir a numérico y dividir entre 100 para obtener el valor decimal data$IPC &lt;- as.numeric(data$IPC) / 100 # eliminar faltantes data &lt;- data[!is.na(data$Tiempo) &amp; !is.na(data$IPC), ] Después, se convierte la data en tipo serie de tiempo mediante la funcion ts. A continuación, se puede ver como los datos quedaron organizados en una matriz donde las filas son años y las columnas meses y el dato correspondiente se encuentra en el cruce de ambas. ## Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec ## 1955 -0.0087 -0.0001 0.0084 0.0077 0.0144 0.0203 0.0210 0.0257 0.0310 0.0304 0.0425 0.0528 ## 1956 0.0636 0.0576 0.0726 0.0831 0.0883 0.0791 0.0930 0.1030 0.1121 0.1297 0.1358 0.1715 ## 1957 0.1939 0.2143 0.2093 0.2117 0.1984 0.2069 0.1946 0.1805 0.1786 0.1724 0.1806 0.1390 ## 1958 0.1099 0.1047 0.1014 0.0892 0.0854 0.0798 0.0947 0.1034 0.0909 0.0896 0.0762 0.0787 ## 1959 0.0841 0.0778 0.0723 0.0714 0.0742 0.0781 0.0652 0.0524 0.0614 0.0549 0.0552 0.0493 ## 1960 0.0479 0.0496 0.0557 0.0612 0.0713 0.0735 0.0759 0.0836 0.0870 0.0987 0.1023 0.1027 ## 1961 0.1003 0.0840 0.0747 0.0681 0.0613 0.0574 0.0563 0.0529 0.0454 0.0366 0.0263 0.0257 ## 1962 0.0330 0.0455 0.0585 0.0601 0.0615 0.0630 0.0979 0.1634 0.2129 0.2508 0.2652 0.2924 ## 1963 0.2899 0.2928 0.2983 0.3155 0.3344 0.3360 0.3067 0.2388 0.2051 0.1818 0.2043 0.1958 ## 1964 0.1767 0.1563 0.1370 0.1101 0.0962 0.0880 0.0875 0.0710 0.0616 0.0557 0.0360 0.0361 ## 1965 0.0457 0.0637 0.0805 0.1123 0.1186 0.1444 0.1430 0.1690 0.1809 0.1951 0.1942 0.1756 ## 1966 0.1758 0.1704 0.1724 0.1600 0.1470 0.1286 0.1201 0.1109 0.0962 0.0687 0.0630 0.0824 ## 1967 0.0830 0.0840 0.0760 0.0728 0.0760 0.0717 0.0768 0.0718 0.0714 0.0848 0.0852 0.0704 ## 1968 0.0773 0.0765 0.0743 0.0697 0.0712 0.0651 0.0671 0.0641 0.0617 0.0618 0.0642 0.0658 ## 1969 0.0616 0.0681 0.0735 0.0837 0.0789 0.0863 0.0736 0.0769 0.0772 0.0743 0.0701 0.0756 ## 1970 0.0744 0.0643 0.0651 0.0522 0.0612 0.0658 0.0826 0.0915 0.0930 0.0978 0.1054 0.1000 ## 1971 0.1119 0.1303 0.1314 0.1465 0.1460 0.1403 0.1350 0.1384 0.1383 0.1346 0.1302 0.1357 ## 1972 0.1334 0.1290 0.1360 0.1424 0.1431 0.1399 0.1395 0.1494 0.1775 0.2009 0.2270 0.2377 ## 1973 0.2478 0.2344 0.2336 0.2164 0.2289 0.2408 0.2628 0.2691 0.2670 0.2573 0.2353 0.2245 ## 1974 0.2120 0.2206 0.2226 0.2670 0.2542 0.2635 0.2636 0.2529 0.2463 0.2439 0.2518 0.2480 ## 1975 0.2436 0.2399 0.2375 0.1991 0.1925 0.1777 0.1711 0.1786 0.1712 0.1635 0.1569 0.1773 ## 1976 0.2008 0.2182 0.2227 0.2304 0.2531 0.2576 0.2572 0.2753 0.2991 0.3663 0.4085 0.4165 ## 1977 0.3945 0.3701 0.3487 0.3240 0.2944 0.2871 0.2722 0.2436 0.2340 0.1708 0.1475 0.1413 ## 1978 0.1269 0.1321 0.1353 0.1616 0.1762 0.1842 0.2104 0.2149 0.2253 0.2279 0.2261 0.2157 ## 1979 0.2347 0.2551 0.2771 0.2687 0.2815 0.2880 0.2759 0.2662 0.2420 0.2664 0.2827 0.2772 ## 1980 0.2737 0.2613 0.2549 0.2652 0.2620 0.2585 0.2567 0.2800 0.2882 0.2705 0.2602 0.2787 ## 1981 0.2893 0.2952 0.2833 0.2710 0.2635 0.2636 0.2603 0.2510 0.2455 0.2477 0.2478 0.2419 ## 1982 0.2354 0.2346 0.2452 0.2526 0.2479 0.2403 0.2308 0.2188 0.2185 0.2242 0.2228 0.2046 ## 1983 0.1982 0.1832 0.1742 0.1720 0.1704 0.1664 0.1702 0.1720 0.1664 0.1542 0.1416 0.1517 ## 1984 0.1567 0.1619 0.1651 0.1527 0.1639 0.1828 0.1927 0.2124 0.2282 0.2381 0.2761 0.2791 ## 1985 0.2564 0.2467 0.2440 0.2477 0.2349 0.2245 0.2355 0.2372 0.2265 0.2254 0.1640 0.1346 ## 1986 0.1411 0.1617 0.1679 0.1817 0.1954 0.2095 0.2109 0.1977 0.2036 0.1980 0.2273 0.2481 ## 1987 0.2665 0.2527 0.2501 0.2480 0.2473 0.2402 0.2370 0.2613 0.2636 0.2841 0.2844 0.3027 ## 1988 0.3026 0.2965 0.2900 0.2859 0.2768 0.2812 0.2791 0.2703 0.2653 0.2485 0.2488 0.2363 ## 1989 0.2376 0.2569 0.2655 0.2661 0.2709 0.2612 0.2669 0.2712 0.2763 0.2798 0.2824 0.2897 ## 1990 0.2872 0.2898 0.3024 0.3065 0.3097 0.3236 0.3198 0.3165 0.3118 0.3116 0.3149 0.3100 ## 1991 0.3160 0.3120 0.3001 0.2925 0.2822 0.2682 0.2743 0.2735 0.2708 0.2715 0.2730 0.2813 ## 1992 0.2836 0.2770 0.2692 0.2632 0.2570 0.2513 0.2482 0.2471 0.2418 0.2308 0.2221 0.2138 ## 1993 0.2046 0.2107 0.2143 0.2169 0.2237 0.2260 0.2250 0.2301 0.2341 0.2394 0.2386 0.2308 ## 1994 0.2269 0.2235 0.2231 0.2237 0.2216 0.2259 0.2104 0.2086 0.2133 0.2117 0.2130 0.2166 ## 1995 0.2150 0.2109 0.2079 0.2052 0.2013 0.1946 0.2024 0.2081 0.2020 0.1990 0.1978 0.1970 ## 1996 0.2057 0.2113 0.2155 0.2187 0.2188 0.2163 0.2062 0.1958 0.1893 0.1852 0.1860 0.1867 ## 1997 0.1788 0.1793 0.1801 0.1780 0.1781 0.1768 0.1784 0.1803 0.1924 0.2074 0.2067 0.2069 ## 1998 0.2027 0.1894 0.1780 0.1709 0.1635 0.1670 0.1718 0.1538 0.1351 0.1117 0.0998 0.0896 ## 1999 0.0878 0.0928 0.0933 0.0932 0.0965 0.0923 0.0825 0.0889 0.0973 0.0996 0.1000 0.0968 ## 2000 0.0929 0.0910 0.0920 0.0899 0.0882 0.0875 0.0849 0.0806 0.0781 0.0798 0.0787 0.0793 ## 2001 0.0809 0.0803 0.0797 0.0801 0.0778 0.0765 0.0737 0.0670 0.0589 0.0565 0.0584 0.0625 ## 2002 0.0616 0.0598 0.0597 0.0637 0.0707 0.0699 0.0739 0.0724 0.0760 0.0785 0.0773 0.0721 ## 2003 0.0704 0.0726 0.0711 0.0658 0.0613 0.0649 0.0619 0.0628 0.0621 0.0549 0.0537 0.0607 ## 2004 0.0619 0.0589 0.0597 0.0590 0.0582 0.0550 0.0543 0.0525 0.0503 0.0501 0.0504 0.0483 ## 2005 0.0491 0.0488 0.0502 0.0527 0.0510 0.0485 0.0456 0.0419 0.0411 0.0412 0.0404 0.0394 ## 2006 0.0432 0.0472 0.0458 0.0419 0.0431 0.0448 0.0471 0.0525 0.0578 0.0626 0.0623 0.0603 ## 2007 0.0577 0.0522 0.0501 0.0516 0.0541 0.0569 0.0600 0.0635 0.0593 0.0573 0.0639 0.0718 ## 2008 0.0752 0.0787 0.0757 0.0794 0.0773 0.0767 0.0718 0.0647 0.0614 0.0573 0.0477 0.0381 ## 2009 0.0328 0.0313 0.0321 0.0272 0.0237 0.0200 0.0210 0.0209 0.0184 0.0198 0.0207 0.0225 ## 2010 0.0224 0.0231 0.0228 0.0233 0.0259 0.0317 0.0340 0.0317 0.0319 0.0284 0.0302 0.0323 ## 2011 0.0342 0.0327 0.0373 0.0402 0.0396 0.0373 0.0354 0.0355 0.0340 0.0343 0.0344 0.0320 ## 2012 0.0303 0.0311 0.0308 0.0306 0.0277 0.0244 0.0200 0.0183 0.0191 0.0202 0.0200 0.0216 ## 2013 0.0222 0.0227 0.0227 0.0184 0.0176 0.0194 0.0213 0.0232 0.0251 0.0272 0.0293 0.0279 ## 2014 0.0289 0.0302 0.0286 0.0329 0.0365 0.0366 0.0382 0.0436 0.0456 0.0464 0.0441 0.0442 ## 2015 0.0446 0.0474 0.0535 0.0589 0.0639 0.0677 0.0745 0.0759 0.0798 0.0793 0.0820 0.0860 ## 2016 0.0897 0.0810 0.0727 0.0648 0.0596 0.0575 0.0547 0.0518 0.0469 0.0466 0.0437 0.0399 ## 2017 0.0340 0.0387 0.0397 0.0405 0.0412 0.0409 0.0368 0.0337 0.0314 0.0313 0.0316 0.0320 ## 2018 0.0312 0.0310 0.0323 0.0333 0.0327 0.0318 0.0315 0.0301 0.0321 0.0325 0.0331 0.0343 ## 2019 0.0379 0.0375 0.0382 0.0386 0.0384 0.0380 0.0362 0.0372 0.0386 0.0351 0.0285 0.0219 ## 2020 0.0197 0.0188 0.0197 0.0175 0.0149 0.0161 0.0160 0.0156 0.0151 0.0195 0.0330 0.0363 ## 2021 0.0397 0.0444 0.0451 0.0458 0.0526 0.0562 0.0694 0.0801 0.0853 0.0923 0.0907 0.0967 ## 2022 0.1021 0.1084 0.1144 0.1222 0.1253 0.1312 0.1325 0.1328 0.1334 0.1282 0.1236 0.1213 ## 2023 0.1178 0.1143 0.1099 0.1048 0.1015 0.0928 0.0835 0.0774 0.0736 0.0716 0.0716 0.0718 ## 2024 0.0686 0.0612 Luego de convertir los datos en serie de tiempo se realiza su descomposición para identificar los componenentes principales de la serie como la tendencia, estacionalidad y componente aleatorio (Residuos). "],["visualización-de-la-serie-de-tiempo-y-sus-componentes.html", "Capítulo 3 VISUALIZACIÓN DE LA SERIE DE TIEMPO Y SUS COMPONENTES 3.1 Promedio móvil 3.2 Rezago", " Capítulo 3 VISUALIZACIÓN DE LA SERIE DE TIEMPO Y SUS COMPONENTES 3.1 Promedio móvil # media móvil con k= periodo= 12 data$PromedioMovil &lt;- rollmean(data$IPC, k = 12, fill = NA, align = &quot;right&quot;) # Grafica promedio móvil g1&lt;- ggplot(data, aes(x = Tiempo)) + geom_line(aes(y = IPC, color = &quot;IPC&quot;), size = 0.8) + geom_line(aes(y = PromedioMovil, color = &quot;Promedio Móvil&quot;), size = 0.8) + labs(title = paste(&quot;Promedio Móvil de IPC (Ventana =&quot;, 12, &quot;meses)&quot;), x = &quot;Fecha&quot;, y = &quot;IPC&quot;, color = &quot;Leyenda&quot;) + theme_minimal() ggplotly(g1) La gráfica muestra dos series que representan la evolución del Índice de Precios al Consumidor (IPC) y su promedio móvil a lo largo del tiempo. A continuación, algunas interpretaciones: Línea Roja (IPC): Esta línea representa los valores reales del IPC a lo largo del tiempo. Se puede observar que hay periodos de alta volatilidad con picos y caídas pronunciadas, lo que sugiere momentos de alta inflación seguidos de desaceleraciones. Línea Azul (Promedio Móvil): El promedio móvil suaviza las fluctuaciones del IPC al promediar los valores de los 12 meses anteriores. Esto ayuda a identificar las tendencias generales a largo plazo y elimina el “ruido” de las fluctuaciones mensuales. Por ejemplo, se pueden ver tendencias sostenidas de aumento o disminución del IPC. Períodos Destacados: -Desde aproximadamente 1960 hasta 1980, hay picos elevados, lo que plantea periodos de inflación alta o inestabilidad económica. -Después del año 2000, las fluctuaciones parecen ser menores, con una caída sostenida en el IPC hasta 2020, indicando un período de estabilidad o control inflacionario. Diferencias entre las series: -Las desviaciones entre el IPC real y el promedio móvil son mayores en épocas de alta volatilidad. Esto indica que el promedio móvil tiende a suavizar los cambios bruscos, mientras que el IPC muestra las variaciones mensuales más evidentes. 3.2 Rezago # calculo del rezago data$Rezago &lt;- dplyr::lag(data$IPC, n = 12) # Grafica del rezago g2&lt;-lag.plot(Indice_ts,lag=12, do.lines = FALSE) ggplotly(g2) Se puede interpretar que el IPC tiene una autocorrelación significativa en los rezagos más cortos (lag 1, lag 2, etc.), lo que indica que el IPC actual está muy relacionado con los valores recientes. Esta observación es útil para hacer pronósticos a corto plazo, dado que los valores recientes del IPC serán buenos indicadores de los valores futuros. A medida que el rezago aumenta (lag 6, lag 7, etc.), la dispersión de los puntos es más notable y menos concentrada en una línea recta. Esto puede ocasionar una disminución en la correlación entre el valor actual del IPC y sus valores más antiguos. En términos simples, el comportamiento del IPC hace 6 meses tiene menos influencia en el comportamiento del IPC actual comparado con valores más recientes. Para los rezagos más largos (como el lag 12), es probable que la relación sea menor, ya que otros factores pueden haber afectado el IPC en ese lapso de tiempo. "],["descomposición-de-la-serie-de-tiempo.html", "Capítulo 4 DESCOMPOSICIÓN DE LA SERIE DE TIEMPO 4.1 Descomposición 4.2 Estacionariedad", " Capítulo 4 DESCOMPOSICIÓN DE LA SERIE DE TIEMPO 4.1 Descomposición # Graficar la descomposición g3&lt;-autoplot(descomposicion) + labs(title = &quot;Descomposición de la Serie de Tiempo IPC&quot;, x = &quot;Tiempo&quot;, y = &quot;Valor&quot;) + theme_minimal() ggplotly(g3) La gráfica muestra la descomposición de una serie de tiempo del Índice de Precios al Consumidor (IPC), dividiéndola en cuatro componentes: tendencia (trend), estacionalidad (seasonal), residuo (remainder) y la serie original (data). Esta gráfica está compuesta por las siguientes partes: Serie Data Original Aquí se puede observar cómo ha variado el IPC . Se identifican periodos con picos y valles que indican cuando el IPC fue alto o bajo. Esta línea representa la suma de los componentes de tendencia, estacionalidad y residuo. Tendencia (Trend) La tendencia muestra los cambios a largo plazo en el IPC. Si se observa un incremento sostenido, significa que el IPC ha aumentado de manera consistente a lo largo del tiempo, mientras que una tendencia descendente indicaría lo contrario, esto refleja variaciones en la economía. Estacionalidad (Seasonal) Representa variaciones que se repiten a intervalos específicos. En esta gráfica, se ve un patrón claro y periódico, lo que sugiere que el IPC tiene un comportamiento cíclico que se repite todos los años o meses. Estos ciclos pueden estar asociados con factores estacionales como festividades, cambios climáticos o eventos recurrentes en la economía. Residuo (Remainder) El residuo refleja las fluctuaciones aleatorias y las irregularidades que no se pueden predecir. Si el residuo es pequeño y no muestra patrones obvios, indica que la descomposición ha capturado bien la estructura de la serie. Si, por el contrario, ves variaciones grandes e irregulares, podría significar que hay eventos no explicados que han influido en el IPC en ciertos momentos. 4.2 Estacionariedad # Cargar la librería necesaria para la prueba de Dickey-Fuller if(!require(tseries)) install.packages(&quot;tseries&quot;, dependencies = TRUE) library(tseries) # Aplicar la prueba de Dickey-Fuller Aumentada a la serie de tiempo resultado_adf &lt;- adf.test(Indice_ts, alternative = &quot;stationary&quot;) ## Warning in adf.test(Indice_ts, alternative = &quot;stationary&quot;): p-value smaller than printed p-value # Imprimir el resultado de la prueba print(resultado_adf) ## ## Augmented Dickey-Fuller Test ## ## data: Indice_ts ## Dickey-Fuller = -4.1844, Lag order = 9, p-value = 0.01 ## alternative hypothesis: stationary # Interpretar el resultado if(resultado_adf$p.value &lt; 0.05) { cat(&quot;La serie es estacionaria con un nivel de significancia&quot;) } ## La serie es estacionaria con un nivel de significancia 4.2.1 Resultado prueba de estacionariedad El resultado de la prueba de Dickey-Fuller Aumentada nos da como resultado: Estadístico de Dickey-Fuller: -4.1844 Orden de Rezago (Lag order): 9 Valor p (p-value): 0.01 Interpretación del Resultado Dado que el p-valor es 0.01, que es menor a 0.05, podemos rechazar la hipótesis nula de no estacionariedad. esto significa que: La serie es estacionaria al nivel de significancia del 5%. No es necesario aplicar diferenciación u otras transformaciones adicionales para hacer la serie estacionaria. "]]
